[user]
	name = Harper Reed
	email = harper@nata2.org
[github]
	user = harperreed


[alias]
        st = status
        ci = commit
        br = branch
        co = checkout
        df = diff
        lg = log -p
        lol = log --graph --decorate --pretty=oneline --abbrev-commit
        lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
        ls = ls-files
        # generate comment
        llm = "!f() { \
            if git diff --quiet $1; then \
                echo \"No changes to commit. Aborting.\"; \
            else \
                commit_msg=$(git diff $1 | llm -s \"$(cat ~/.config/prompts/commit-system-prompt.txt)\"); \
                echo \"Commit message:\n$commit_msg\"; \
                read -p \"Do you want to commit with this message? [y/N] \" confirm; \
                if [[ $confirm =~ ^[Yy]$ ]]; then \
                    git commit -m \"$commit_msg\"; \
                else \
                    echo \"Commit aborted.\"; \
                fi; \
            fi; \
        }; f"

        llm-staged = "!f() { \
            git add -p; \
            if ! git diff --cached --quiet; then \
                commit_msg=$(git diff --cached | llm -s \"$(cat ~/.config/prompts/commit-system-prompt.txt)\"); \
                echo \"Commit message:\n$commit_msg\"; \
                read -p \"Do you want to commit with this message? [y/N] \" confirm; \
                if [[ $confirm =~ ^[Yy]$ ]]; then \
                    git commit -m \"$commit_msg\"; \
                else \
                    git reset HEAD .; \
                    echo \"Commit aborted.\"; \
                fi; \
            else \
                echo \"No changes staged for commit. Aborting.\"; \
            fi; \
        }; f"
	pr = !pr.sh

[color]
        ui = true
[color "diff"]
        whitespace = red reverse
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	editor = nvim
[push]
	default = current
	autoSetupRemote = true

[hub]
protocol = https

[credential]
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[pull]
	rebase = false
[init]
	defaultBranch = main
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[diff]
	algorithm = histogram
	tool = difftastic
[merge]
	conflictstyle = zdiff3
[branch]
	sort = -committerdate
[commit]
	verbose = true
[transfer]
	fsckobjects = true
[fetch]
	fsckobjects = true
[receive]
	fsckObjects = true
[gpg]
	format = ssh

[url "git@github.com:"]
	insteadOf = "https://github.com/"


[include]
  path = .gitconfig.local
